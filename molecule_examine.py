import streamlit as st
from rdkit import Chem
from stmol import showmol
import py3Dmol
from rdkit.Chem import AllChem
import deepchem as dc
import pandas as pd
from urllib.request import urlopen
import matplotlib.pyplot as plt
import numpy as np
from PIL import Image
from st_pages import Page, show_pages
show_pages(
    [
        # Page("main.py", "Home", "üè†"),
        Page("molecule_examine.py", "Molecule Examine", "üß´"),
        Page("chat.py", "ChatAI", "ü™¨"),
        Page("about_us.py", "About us", "üßëüèª‚Äçüî¨")
    ]
)


def CIRconvert(smi):
    url = "https://cactus.nci.nih.gov/chemical/structure/" + smi + "/formula"
    ans = urlopen(url).read().decode('utf8')
    ans1 = "–§–æ—Ä–º—É–ª–∞ –≤–µ—â–µ—Å—Ç–≤–∞: " + ans
    return ans1


def getSolubility(a):
    c = a[0][0]
    print(c)
    b = "–†–∞—Å—Å—Ç–≤–æ—Ä–∏–º–æ—Å—Ç—å –≤–µ—â–µ—Å—Ç–≤–∞: " + c.astype(str)
    return b


def getPearson_r2_train_score(a):
    b = "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞: " + a.astype(str)
    return b


def getPearson_r2_test_score(a):
    b = "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ—á–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞: " + a.astype(str)
    return b


def makeblock(smi):
    mol = Chem.MolFromSmiles(smi)
    mol = Chem.AddHs(mol)
    AllChem.EmbedMolecule(mol)
    mblock = Chem.MolToMolBlock(mol)
    return mblock


def render_mol(xyz):
    xyzview = py3Dmol.view()
    xyzview.addModel(xyz, 'mol')
    xyzview.setStyle({'stick': {}})
    xyzview.setBackgroundColor('white')
    xyzview.zoomTo()
    showmol(xyzview, height=500, width=2000)


st.title('3D –º–æ–¥–µ–ª—å –≤–µ—â–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–≥–Ω–æ–∑ —Ä–∞—Å—Ç–≤–æ—Ä–∏–º–æ—Å—Ç–∏ üß¨')
st.write('–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –Ω–∞—á–∞—Ç—å –Ω—É–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å, –¥–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—Ç–≤–æ—Ä–∏–º–æ—Å—Ç–∏ –≤–µ—â–µ—Å—Ç–≤–∞ (–º–æ–ª–µ–∫—É–ª—ã). '
         '**–†–∞—Å—Å—Ç–≤–æ—Ä–∏–º–æ—Å—Ç—å** - —ç—Ç–æ –º–µ—Ä–∞ —Ç–æ–≥–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ª–µ–≥–∫–æ –≤–µ—â–µ—Å—Ç–≤–æ —Ä–∞—Å—Ç–≤–æ—Ä—è–µ—Ç—Å—è –≤ –≤–æ–¥–µ. '
         '–≠—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –ª—é–±–æ–≥–æ —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞. '
         '–ï—Å–ª–∏ –æ–Ω–æ —Ä–∞—Å—Ç–≤–æ—Ä—è–µ—Ç—Å—è —Å —Ç—Ä—É–¥–æ–º, '
         '—Ç–æ –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ø–∞—Å—Ç—å –≤ –∫—Ä–æ–≤–æ—Ç–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –æ–∫–∞–∑–∞–Ω–∏—è —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞. '
         '–•–∏–º–∏–∫–∏-—Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç—ã –ø—Ä–æ–≤–æ–¥—è—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—è –º–æ–ª–µ–∫—É–ª—ã –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–∞—Å—Ç–≤–æ—Ä–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤.')
st.write('–ß—Ç–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—Å—è —Å —ç—Ç–æ–π –∑–∞–¥–∞—á–µ–π, –Ω—É–∂–Ω–æ –≤–æ–æ—Ä—É–∂–∏—Ç—Å—è –∑–Ω–∞–Ω–∏–µ–º –æ —Ç–æ–º, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –º–æ–ª–µ–∫—É–ª—É –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ, '
         '—á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–º–æ–≥–ª–∞ –µ–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å, –ø–æ—Å—Ç—Ä–æ–∏—Ç—å 3D –º–æ–¥–µ–ª—å –∏ —Å–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Å—Ç–≤–æ—Ä–∏–º–æ—Å—Ç—å. '
         '–ö —Å—á–∞—Å—Ç—å—é, —Ä–µ—à–µ–Ω–∏–µ –µ—Å—Ç—å, –∏ –æ–Ω–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è **SMILES** (Simplified Molecular Input Line Entry System –∏–ª–∏ '
         '—Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–æ—â—ë–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –º–æ–ª–µ–∫—É–ª –≤ —Å—Ç—Ä–æ–∫–µ –≤–≤–æ–¥–∞) - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤–∏–ª (—Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è) –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∞ –∏ '
         '—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–ª–µ–∫—É–ª—ã —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–æ–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤ ASCII. '
         '–î–∞–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å –≤–∞—à–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –∏ –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ –æ—Ü–µ–Ω–∏—Ç—å –∑–∞–¥—É–º–∞–Ω–Ω–æ–µ, –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–æ–≤, —è –ø—Ä–∏–≤–µ–¥—É –¥–ª—è –í–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–µ—â–µ—Å—Ç –≤ —Å–∏—Å—Ç–µ–º–µ SMILES.')
st.write('1. **–¢–∏–∞–º–∏–Ω –∏–ª–∏ –≤–∏—Ç–∞–º–∏–Ω B1:** *CC1=C(SC=[N+]1CC2=CN=C(N=C2N)C)CCO* - —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –º–∏–∫—Ä–æ—ç–ª–µ–º–µ–Ω—Ç–æ–º –¥–ª—è –ª—é–¥–µ–π –∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö. –û–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –ø–∏—â–µ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏ —Å–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∏—â–µ–≤–æ–π –¥–æ–±–∞–≤–∫–∏ –∏–ª–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞. –§–æ—Å—Ñ–æ—Ä–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —Ç–∏–∞–º–∏–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∞–∫—Ü–∏–π, –≤–∫–ª—é—á–∞—è —Ä–∞—Å—â–µ–ø–ª–µ–Ω–∏–µ –≥–ª—é–∫–æ–∑—ã –∏ –∞–º–∏–Ω–æ–∫–∏—Å–ª–æ—Ç.')
st.write('2. **–ì–æ—Ä–º–æ–Ω –ø—Ä–æ–≥–µ—Å—Ç–µ—Ä–æ–Ω:** *CC(=O)C1CCC2C1(CCC3C2CCC4=CC(=O)CCC34C)C* - —ç–Ω–¥–æ–≥–µ–Ω–Ω—ã–π —Å—Ç–µ—Ä–æ–∏–¥ –∏ –ø—Ä–æ–≥–µ—Å—Ç–∞–≥–µ–Ω–Ω—ã–π –ø–æ–ª–æ–≤–æ–π –≥–æ—Ä–º–æ–Ω, –æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª, –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å –∏ —ç–º–±—Ä–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —É —á–µ–ª–æ–≤–µ–∫–∞ –∏ –¥—Ä—É–≥–∏—Ö –≤–∏–¥–æ–≤. –û–Ω —Ç–∞–∫–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –º–µ—Ç–∞–±–æ–ª–∏—á–µ—Å–∫–∏–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º –∑–≤–µ–Ω–æ–º –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ –¥—Ä—É–≥–∏—Ö —ç–Ω–¥–æ–≥–µ–Ω–Ω—ã—Ö —Å—Ç–µ—Ä–æ–∏–¥–æ–≤, –≤–∫–ª—é—á–∞—è –ø–æ–ª–æ–≤—ã–µ –≥–æ—Ä–º–æ–Ω—ã –∏ –∫–æ—Ä—Ç–∏–∫–æ—Å—Ç–µ—Ä–æ–∏–¥—ã, –∏ –∏–≥—Ä–∞–µ—Ç –≤–∞–∂–Ω—É—é —Ä–æ–ª—å –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ–∑–≥–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–µ–π—Ä–æ—Å—Ç–µ—Ä–æ–∏–¥–∞.')
st.write('3. **–ö–æ—Ñ–µ–∏–Ω:** *CN1C=NC2=C1C(=O)N(C(=O)N2C)C* - —è–≤–ª—è–µ—Ç—Å—è –ø—Å–∏—Ö–æ–∞–∫—Ç–∏–≤–Ω—ã–º –≤–µ—â–µ—Å—Ç–≤–æ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –∫–æ—Ñ–µ, —á–∞–µ, –º–∞—Ç–µ, –≤—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–∞–≤ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–æ–≤ –∏ –º–Ω–æ–≥–∏—Ö –ø—Ä–æ—Ö–ª–∞–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤. –¢–∞–∫–∂–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–æ—Å—Ç–∞–≤ –∞–ø—Ç–µ—á–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤. –û–Ω —Å–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç—Å—è —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –Ω–∞—Å–µ–∫–æ–º—ã—Ö, –ø–æ–µ–¥–∞—é—â–∏—Ö –ª–∏—Å—Ç—å—è, —Å—Ç–µ–±–ª–∏ –∏ –∑—ë—Ä–Ω–∞, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –ø–æ–æ—â—Ä–µ–Ω–∏—è –æ–ø—ã–ª–∏—Ç–µ–ª–µ–π. –£ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ñ–µ–∏–Ω —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É, —É—Å–∏–ª–∏–≤–∞–µ—Ç —Å–µ—Ä–¥–µ—á–Ω—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å, —É—Å–∫–æ—Ä—è–µ—Ç –ø—É–ª—å—Å, –≤—ã–∑—ã–≤–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫—Ä–æ–≤–µ–Ω–æ—Å–Ω—ã—Ö —Å–æ—Å—É–¥–æ–≤ (–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —Å–æ—Å—É–¥–æ–≤ —Å–∫–µ–ª–µ—Ç–Ω—ã—Ö –º—ã—à—Ü, –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ (—Å—É–∂–∞–µ—Ç –ø—Ä–æ—Å–≤–µ—Ç –º–æ–∑–≥–æ–≤—ã—Ö –∞—Ä—Ç–µ—Ä–∏–π), —Å–µ—Ä–¥—Ü–∞, –ø–æ—á–µ–∫), —É—Å–∏–ª–∏–≤–∞–µ—Ç –º–æ—á–µ–æ—Ç–¥–µ–ª–µ–Ω–∏–µ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.')
st.write('4. **–õ–µ–≤–æ—Ü–∏—Ç–∏—Ä–∏–∑–∏–Ω:** *C1CN(CCN1CCOCC(=O)O)C(C2=CC=CC=C2)C3=CC=C(C=C3)Cl*  - –∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç, –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –±–ª–æ–∫–∞—Ç–æ—Ä–∞–º –ù1-—Ä–µ—Ü–µ–ø—Ç–æ—Ä–æ–≤ –≥–∏—Å—Ç–∞–º–∏–Ω–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è, —Ç–æ –µ—Å—Ç—å –ø—Ä–µ–ø–∞—Ä–∞—Ç –ø—Ä–æ—Ç–∏–≤ –∞–ª–ª–µ—Ä–≥–∏–∏.')
st.write('5. **–ú–µ—Ö–ª–æ—Ä–µ—Ç–∞–º–∏–Ω:** *CN(CCCl)CCCl* - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ –ø–µ—Ä–≤—ã–π —Ü–∏—Ç–æ—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–µ–ø–∞—Ä–∞—Ç (–ø—Ä–æ—Ç–∏–≤–æ–æ–ø—É—Ö–æ–ª–µ–≤—ã–π –ø—Ä–µ–ø–∞—Ä–∞—Ç) –∞–ª–∫–∏–ª–∏—Ä—É—é—â–µ–≥–æ —Ç–∏–ø–∞, –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–µ –±–∏—Å-Œ≤-—Ö–ª–æ—Ä—ç—Ç–∏–ª–∞–º–∏–Ω–∞, –∞–∑–æ—Ç–∏—Å—Ç—ã–π –∞–Ω–∞–ª–æ–≥ –∏–ø—Ä–∏—Ç–∞. –ü—Ä–µ–ø–∞—Ä–∞—Ç –±—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–µ–Ω –ø—Ä–∏ –æ—Å—Ç—Ä–æ–º –∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–º –º–∏–µ–ª–æ- –∏ –ª–∏–º—Ñ–æ–ª–µ–π–∫–æ–∑–µ, –ª–∏–º—Ñ–æ- –∏ —Ä–µ—Ç–∏–∫—É–ª–æ—Å–∞—Ä–∫–æ–º–µ, –ª–∏–º—Ñ–æ–≥—Ä–∞–Ω—É–ª–µ–º–∞—Ç–æ–∑–µ, –≥—Ä–∏–±–æ–≤–∏–¥–Ω–æ–º –º–∏–∫–æ–∑–µ, –æ—Ç—á–∞—Å—Ç–∏ –ø—Ä–∏ –º–µ–ª–∫–æ–∫–ª–µ—Ç–æ—á–Ω–æ–º —Ä–∞–∫–µ –ª—ë–≥–∫–æ–≥–æ.')
smiles = st.text_input('–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–µ—â–µ—Å—Ç–≤–∞ –∏–ª–∏ –º–æ–ª–µ–∫—É–ª—ã –ø–æ –ø—Ä–∞–≤–∏–ª—É SMILES. '
                       '–ù–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –ø–æ–∫–∞–∑–æ–Ω–∞ –Ω–∏–∂–µ, —ç—Ç–æ —Ö–∏–º–∏—á–µ—Å–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ "–¢–µ—Ä–±—É—Ç—Ä–∏–Ω", –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è '
                       '"–ì–µ—Ä–±–∏—Ü–∏–¥–∞" -  –≤–µ—â–µ—Å—Ç–≤–∞, –ø—Ä–∏–º–µ–Ω–∏–º—ã–π –¥–ª—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏–π.',
                       'CSc1nc(NC(C)C)nc(NC(C)C)n1')

st.success(CIRconvert(smiles),  icon="‚úÖÔ∏è")
st.write('**–û–±—ä–µ—Å–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –≤ 3D –º–æ–¥–µ–ª–∏ –º–æ–ª–µ–∫—É–ª—ã** ‚¨áÔ∏è')
st.write('–ö—Ä–∞—Å–Ω—ã–π - –∫–∏—Å–ª–æ—Ä–æ–¥')
st.write('–ë–µ–ª—ã–π - –≤–æ–¥–æ—Ä–æ–¥')
st.write('–°–µ—Ä—ã–π - —É–≥–ª–µ—Ä–æ–¥')
st.write('–ì–æ–ª—É–±–æ–π - –∞–∑–æ—Ç')
st.write('–ñ—ë–ª—Ç—ã–π - —Å–µ—Ä–∞ –∏–ª–∏ —Ö–ª–æ—Ä')
st.info('3D –º–æ–¥–µ–ª—å –Ω–∏–∂–µ –º–æ–∂–Ω–æ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å',  icon="‚ÑπÔ∏è")
blk = makeblock(smiles)
render_mol(blk)
st.write('**–ü–æ–¥–æ–∂–¥–∏—Ç–µ –±—É–∫–≤–∞–ª—å–Ω–æ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑** ‚ú®')

# ML
solubility_tasks, solubility_datasets, transformers = dc. molnet.load_delaney(featurizer='GraphConv')
train_dataset, valid_dataset, test_dataset = solubility_datasets
model = dc.models.GraphConvModel(n_tasks=1, mode='regression', dropout=0.2)
model.fit(train_dataset, nb_epoch=50)

featurizer = dc.feat.ConvMolFeaturizer()
x = featurizer.featurize(smiles)
predicted_solubility = model.predict_on_batch(x)
st.success(getSolubility(predicted_solubility), icon="‚úÖ")
st.write('–ü—É—Å—Ç—å –¥–µ–ª—å—Ç–∞ (Œ¥) - —ç—Ç–æ –Ω–∞—à–µ —Å–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ–≥–¥–∞ –µ—Å–ª–∏: ')
st.latex(r'''\lim\limits_{\delta\to -3} \delta = –ù–µ—Ä–∞—Å—Ç–≤–æ—Ä–∏–º–æ''')
st.latex(r'''\lim\limits_{\delta\to 3} \delta = –†–∞—Å—Ç–≤–æ—Ä–∏–º–æ''')
st.latex(r'''\delta \in (-2; 2) = –ú–∞–ª–æ—Ä–∞—Å—Ç–≤–æ—Ä–∏–º–æ''')

st.write('')

st.header('–û—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–∏')
st.write('–í –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–∞—è –≥—Ä–∞—Ñ–æ–≤–∞—è —Å–≤–µ—Ä—Ç–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—â–∞—è, —á—Ç–æ –º–µ—Ç–∫–∏ —è–≤–ª—è—é—Ç—Å—è –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞–º–∏ —á–∏—Å–ª–∞–º–∏ –∏ –º–æ–¥–µ–ª—å '
         '–¥–æ–ª–∂–Ω–∞ —Å—Ç–∞—Ä–∞—Ç—å—Å—è –≤–æ–∑–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∏—Ö –∫–∞–∫ –º–æ–∂–Ω–æ —Ç–æ—á–Ω–µ–µ. –≠—Ç–∏–º –æ–Ω–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É—é—â–µ–π –º–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä–∞—è –ø—ã—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å '
         '–∫–∞–∂–¥–æ–π –≤—ã–±–æ—Ä–∫–∏ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–∑ –Ω–∞–±–æ—Ä–∞ –∫–ª–∞—Å—Å–æ–≤. –í –∫–∞—á–µ—Å—Ç–≤–æ –º–µ—Ç—Ä–∫–∏ –æ—Ü–µ–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è **–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –ü–∏—Ä—Å–æ–Ω–∞**')
metric = dc.metrics.Metric(dc.metrics.pearson_r2_score)
train_score = model.evaluate(train_dataset, [metric], transformers)
test_score = model.evaluate(test_dataset, [metric], transformers)
st.write(getPearson_r2_train_score(train_score['pearson_r2_score']))
st.write(getPearson_r2_test_score(test_score['pearson_r2_score']))
